// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace CommentarySystem.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241009094919_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("WebApplication1.Data.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("comment_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<int>("EndIndex")
                        .HasColumnType("INTEGER")
                        .HasColumnName("end_index");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parent_comment_id");

                    b.Property<int>("StartIndex")
                        .HasColumnType("INTEGER")
                        .HasColumnName("start_index");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("text");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("CommentId")
                        .HasName("pk_comment");

                    b.HasIndex("ParentCommentId")
                        .HasDatabaseName("ix_comment_parent_comment_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_comment_user_id");

                    b.ToTable("comment", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("file_id");

                    b.Property<int>("CommentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("comment_id");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("file_path");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("file_size");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("file_type");

                    b.HasKey("FileId")
                        .HasName("pk_file");

                    b.HasIndex("CommentId")
                        .HasDatabaseName("ix_file_comment_id");

                    b.ToTable("file", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("pk_user");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.Comment", b =>
                {
                    b.HasOne("WebApplication1.Data.Entities.Comment", "ParentComment")
                        .WithMany("ChildComments")
                        .HasForeignKey("ParentCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_comment_comment_parent_comment_id");

                    b.HasOne("WebApplication1.Data.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comment_user_user_id");

                    b.Navigation("ParentComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.File", b =>
                {
                    b.HasOne("WebApplication1.Data.Entities.Comment", "Comment")
                        .WithMany("Files")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_file_comment_comment_id");

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.Comment", b =>
                {
                    b.Navigation("ChildComments");

                    b.Navigation("Files");
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
